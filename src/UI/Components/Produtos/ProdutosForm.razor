@inject FactoryService factoryService;
@using System.Globalization
@using UI.ObjetosDto


<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true"
    role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@produto.Nome</h5>
            </div>
            <div class="modal-body">
                <MudGrid Class="justify-space-between">
                    <MudItem xs="12">
                        <MudTextField Label="Nome" @bind-Value="@produto.Nome" Variant="@Variant.Text" Clearable
                            MaxLength=50 Required />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="6">
                        <MudNumericField Culture="@_de" Label="Valor" @bind-Value="@produto.Valor"
                            Variant="@Variant.Text" Format="N2" Required Clearable />
                    </MudItem>
                </MudGrid>
            </div>
            <div class=" modal-footer">
                <MudFab Color="Color.Secondary" StartIcon="@Icons.Filled.Close" Label="Fechar" @onclick=@ModalCancel />
                <MudFab Color="Color.Tertiary" StartIcon="@Icons.Filled.Save" Label="Salvar" @onclick=@ModalSave />
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public long produtoId { get; set; }

    public CultureInfo _de = CultureInfo.GetCultureInfo("de-DE");

    ProdutoDto produto = new();

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (produtoId > 0)
        {
            produto = await factoryService.Produto.SelecionarPorId(produtoId);
        }
    }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }

    private async Task ModalSave()
    {
        switch (this.produtoId > 0)
        {
            case true:
                await factoryService.Produto.Atualizar(this.produtoId, this.produto);
                break;

            default:
                await factoryService.Produto.Adicionar(this.produto);
                break;
        }

        await OnClose.InvokeAsync(true);
    }
}
