// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Application.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220622002814_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.PedidoVenda", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("Alteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("Inclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Quantidade")
                        .HasColumnType("bigint");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("PedidoVendas");
                });

            modelBuilder.Entity("Domain.Entities.PedidoVendaItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("Alteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("IdPedidoVendaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdProdutoId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("Inclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Quantidade")
                        .HasColumnType("bigint");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("IdPedidoVendaId");

                    b.HasIndex("IdProdutoId");

                    b.ToTable("PedidoVendasItems");
                });

            modelBuilder.Entity("Domain.Entities.Produto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("Alteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("Inclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Valor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Domain.Entities.PedidoVendaItem", b =>
                {
                    b.HasOne("Domain.Entities.PedidoVenda", "IdPedidoVenda")
                        .WithMany("Items")
                        .HasForeignKey("IdPedidoVendaId");

                    b.HasOne("Domain.Entities.Produto", "IdProduto")
                        .WithMany()
                        .HasForeignKey("IdProdutoId");

                    b.Navigation("IdPedidoVenda");

                    b.Navigation("IdProduto");
                });

            modelBuilder.Entity("Domain.Entities.PedidoVenda", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
